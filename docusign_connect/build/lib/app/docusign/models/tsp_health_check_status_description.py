# coding: utf-8

"""
    DocuSign REST API

    The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

    OpenAPI spec version: v2.1
    Contact: devcenter@docusign.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class TspHealthCheckStatusDescription(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, description=None, error=None, hostname=None, response_seconds=None, status=None, type=None):
        """
        TspHealthCheckStatusDescription - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'description': 'str',
            'error': 'str',
            'hostname': 'str',
            'response_seconds': 'str',
            'status': 'str',
            'type': 'str'
        }

        self.attribute_map = {
            'description': 'description',
            'error': 'error',
            'hostname': 'hostname',
            'response_seconds': 'responseSeconds',
            'status': 'status',
            'type': 'type'
        }

        self._description = description
        self._error = error
        self._hostname = hostname
        self._response_seconds = response_seconds
        self._status = status
        self._type = type

    @property
    def description(self):
        """
        Gets the description of this TspHealthCheckStatusDescription.
        

        :return: The description of this TspHealthCheckStatusDescription.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this TspHealthCheckStatusDescription.
        

        :param description: The description of this TspHealthCheckStatusDescription.
        :type: str
        """

        self._description = description

    @property
    def error(self):
        """
        Gets the error of this TspHealthCheckStatusDescription.
        

        :return: The error of this TspHealthCheckStatusDescription.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error):
        """
        Sets the error of this TspHealthCheckStatusDescription.
        

        :param error: The error of this TspHealthCheckStatusDescription.
        :type: str
        """

        self._error = error

    @property
    def hostname(self):
        """
        Gets the hostname of this TspHealthCheckStatusDescription.
        

        :return: The hostname of this TspHealthCheckStatusDescription.
        :rtype: str
        """
        return self._hostname

    @hostname.setter
    def hostname(self, hostname):
        """
        Sets the hostname of this TspHealthCheckStatusDescription.
        

        :param hostname: The hostname of this TspHealthCheckStatusDescription.
        :type: str
        """

        self._hostname = hostname

    @property
    def response_seconds(self):
        """
        Gets the response_seconds of this TspHealthCheckStatusDescription.
        

        :return: The response_seconds of this TspHealthCheckStatusDescription.
        :rtype: str
        """
        return self._response_seconds

    @response_seconds.setter
    def response_seconds(self, response_seconds):
        """
        Sets the response_seconds of this TspHealthCheckStatusDescription.
        

        :param response_seconds: The response_seconds of this TspHealthCheckStatusDescription.
        :type: str
        """

        self._response_seconds = response_seconds

    @property
    def status(self):
        """
        Gets the status of this TspHealthCheckStatusDescription.
        Indicates the envelope status. Valid values are:  * sent - The envelope is sent to the recipients.  * created - The envelope is saved as a draft and can be modified and sent later.

        :return: The status of this TspHealthCheckStatusDescription.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """
        Sets the status of this TspHealthCheckStatusDescription.
        Indicates the envelope status. Valid values are:  * sent - The envelope is sent to the recipients.  * created - The envelope is saved as a draft and can be modified and sent later.

        :param status: The status of this TspHealthCheckStatusDescription.
        :type: str
        """

        self._status = status

    @property
    def type(self):
        """
        Gets the type of this TspHealthCheckStatusDescription.
        

        :return: The type of this TspHealthCheckStatusDescription.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """
        Sets the type of this TspHealthCheckStatusDescription.
        

        :param type: The type of this TspHealthCheckStatusDescription.
        :type: str
        """

        self._type = type

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
