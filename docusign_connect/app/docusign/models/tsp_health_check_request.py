# coding: utf-8

"""
    DocuSign REST API

    The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

    OpenAPI spec version: v2.1
    Contact: devcenter@docusign.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class TspHealthCheckRequest(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, app_version=None, description=None, error=None, status=None, status_description=None):
        """
        TspHealthCheckRequest - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'app_version': 'str',
            'description': 'str',
            'error': 'str',
            'status': 'str',
            'status_description': 'list[TspHealthCheckStatusDescription]'
        }

        self.attribute_map = {
            'app_version': 'appVersion',
            'description': 'description',
            'error': 'error',
            'status': 'status',
            'status_description': 'statusDescription'
        }

        self._app_version = app_version
        self._description = description
        self._error = error
        self._status = status
        self._status_description = status_description

    @property
    def app_version(self):
        """
        Gets the app_version of this TspHealthCheckRequest.
        

        :return: The app_version of this TspHealthCheckRequest.
        :rtype: str
        """
        return self._app_version

    @app_version.setter
    def app_version(self, app_version):
        """
        Sets the app_version of this TspHealthCheckRequest.
        

        :param app_version: The app_version of this TspHealthCheckRequest.
        :type: str
        """

        self._app_version = app_version

    @property
    def description(self):
        """
        Gets the description of this TspHealthCheckRequest.
        

        :return: The description of this TspHealthCheckRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this TspHealthCheckRequest.
        

        :param description: The description of this TspHealthCheckRequest.
        :type: str
        """

        self._description = description

    @property
    def error(self):
        """
        Gets the error of this TspHealthCheckRequest.
        

        :return: The error of this TspHealthCheckRequest.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error):
        """
        Sets the error of this TspHealthCheckRequest.
        

        :param error: The error of this TspHealthCheckRequest.
        :type: str
        """

        self._error = error

    @property
    def status(self):
        """
        Gets the status of this TspHealthCheckRequest.
        Indicates the envelope status. Valid values are:  * sent - The envelope is sent to the recipients.  * created - The envelope is saved as a draft and can be modified and sent later.

        :return: The status of this TspHealthCheckRequest.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """
        Sets the status of this TspHealthCheckRequest.
        Indicates the envelope status. Valid values are:  * sent - The envelope is sent to the recipients.  * created - The envelope is saved as a draft and can be modified and sent later.

        :param status: The status of this TspHealthCheckRequest.
        :type: str
        """

        self._status = status

    @property
    def status_description(self):
        """
        Gets the status_description of this TspHealthCheckRequest.
        

        :return: The status_description of this TspHealthCheckRequest.
        :rtype: list[TspHealthCheckStatusDescription]
        """
        return self._status_description

    @status_description.setter
    def status_description(self, status_description):
        """
        Sets the status_description of this TspHealthCheckRequest.
        

        :param status_description: The status_description of this TspHealthCheckRequest.
        :type: list[TspHealthCheckStatusDescription]
        """

        self._status_description = status_description

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
